unity:
  scene_id: 3 # 0 warehouse, 1 garage, 3 natureforest
  render: yes
  spawn_trees: true
  spawn_objects: false
  start_area: [40, 6.0]
  start_origin: [0, 3.0]
  radius_area: 3.5
  radius_origin: 3.0
  end_area: [40, 6.0]
  end_origin: [0, 37]
  bounding_box: [140.0, 160.0] # spawn objects within this bounding box
  bounding_box_origin: [-10.0, 0.8] # relative to the quadrotor start position
  min_object_scale: [0.5, 0.5, 2.6]   # scale of objects in meters, will sample uniformly between bounds
  max_object_scale: [1.0, 1.0, 3.8]   # scale of objects in meters, will sample uniformly between bounds
  basic_size: [1.0, 1.0, 2]
  if_get_pointcloud: true
  range: [40, 40, 6]
  origin: [0.0, 20.0, 3.0]
  res: 0.10
  
drone:
  length: 0.2
  width: 0.2

simulation:
  seed: 67
  sim_dt: 0.1
  max_t: 5.0
  action_mode: 1 # 0 velocity, 1 acceleration
  num_envs: 1
  num_threads: 1
  act_max: [3.0, 1.8, 0.1, 0.0]
  act_min: [0.0, -1.8, -0.1, -0.0]
  reset_if_collide: false
  use_stereo_vision: true

rewards:
  colli_coeff: -0.00 # reward coefficient for position
  distance_coeff: -0.000 # reward coefficient for orientation
  vel_coeff: -0.000 # reward coefficient for linear velocity
  vert_coeff: -0.002 # reward coefficient for changes of input
  angle_vel_coeff: -0.000 # reward coefficient for angular velocity
  input_coeff: -0.0003 # reward coefficient for changes of input
  yaw_coeff: -0.000
  names:
    [
      "goal_penalty",
      "speed_penalty",
      "vertical_penalty",
      "angular_penalty",
      "input_penalty",
      "yaw_penalty",
      "total",
    ]

rgb_camera:
  on: yes
  t_BC: [0.2, 0.0, 0.3] # translational vector of the camera with repect to the body frame
  r_BC: [0.0, 0.0, 90.0] # rotational angle (roll, pitch, yaw) of the camera in degree.
  channels: 3
  width: 256
  height: 256
  fov: 70.0
  enable_depth: no 
  enable_segmentation: no
  enable_opticalflow: no
